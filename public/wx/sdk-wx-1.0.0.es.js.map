{"version":3,"file":"sdk-wx-1.0.0.es.js","sources":["../../src/utils/date.ts","../../src/utils/common.ts","../../src/constants/globalData.ts","../../src/sdk/wx/wxUtils.ts","../../src/types/enum.ts","../../src/sdk/wx/wxAdManger.ts","../../src/sdk/wx/index.ts","../../test/wxTest.ts"],"sourcesContent":["/**\r\n * 获取当前时间戳\r\n */\r\nexport function getCurrentTimeStamp() {\r\n    return new Date().getTime()\r\n}\r\n\r\n/**\r\n * 获取格式时间\r\n * @param timestamp\r\n * @param format\r\n */\r\nexport function getFormatDate(\r\n    timestamp?: number,\r\n    format?: 'YYYY-MM-DD hh:mm:ss' | 'YYYY-MM-DD'\r\n) {\r\n    const date = timestamp ? new Date(timestamp) : new Date()\r\n    const years = date.getFullYear()\r\n    const month = date.getMonth() + 1\r\n    const day = date.getDate()\r\n    const formatNum = (num: string | number) => {\r\n        return String(num).padStart(2, '0')\r\n    }\r\n    let dateStr = `${years}-${formatNum(month)}-${formatNum(day)}`\r\n\r\n    if (format === 'YYYY-MM-DD hh:mm:ss') {\r\n        const hour = date.getHours()\r\n        const min = date.getMinutes()\r\n        const second = date.getSeconds()\r\n        dateStr += ` ${formatNum(hour)}:${formatNum(min)}:${formatNum(second)}`\r\n    }\r\n\r\n    return dateStr\r\n}\r\n\r\n/** 获取当前时间戳 */\r\nexport function getCurrentTimestamp() {\r\n    return new Date().getTime()\r\n}\r\n","import { AnyObject } from '../types'\r\nimport { getFormatDate } from './date'\r\n\r\n/**\r\n * 将对象转成参数\r\n * @param obj 对象\r\n * @param isEncode 是否encode\r\n * @returns a=1&b=2...\r\n */\r\nexport function qsString(obj: any, isEncode: boolean = true) {\r\n    if (obj instanceof Object) {\r\n        let str = ''\r\n        Object.keys(obj).forEach((key, index) => {\r\n            str += `${index ? '&' : ''}${key}=${\r\n                isEncode ? encodeURIComponent(obj[key]) : obj[key]\r\n            }`\r\n        })\r\n        return str\r\n    } else if (typeof obj === 'string') {\r\n        return obj\r\n    } else if (typeof obj === 'number') {\r\n        return `${obj}`\r\n    } else {\r\n        return ''\r\n    }\r\n}\r\n\r\n/**\r\n * 校验是否为纯粹的对象\r\n * @param obj\r\n */\r\nexport function isPlainObject(obj) {\r\n    let proto, Ctor\r\n    if (!obj || typeof obj !== 'object') return false\r\n    proto = Object.getPrototypeOf(obj)\r\n    if (!proto) return true\r\n    Ctor = proto.hasOwnProperty('constructor') && proto.constructor\r\n    return typeof Ctor === 'function' && Ctor === Object\r\n}\r\n/**\r\n * 是否为空对象\r\n * @param obj\r\n */\r\nexport function isEmptyObj(obj) {\r\n    return Object.keys(obj).length <= 0\r\n}\r\n\r\n/**\r\n * 格式化post请求的body\r\n * @param body\r\n * @param contentType\r\n */\r\nexport function formatPostBody(body?: AnyObject, contentType?: string) {\r\n    if (!body) {\r\n        return ''\r\n    }\r\n    if (!contentType || contentType.includes('urlencoded'))\r\n        return qsString(body)\r\n    if (contentType.includes('json'))\r\n        return typeof body === 'string' ? body : JSON.stringify(body)\r\n}\r\n\r\nexport function deepCloneObj<T>(obj: AnyObject) {\r\n    return JSON.parse(JSON.stringify(obj)) as T\r\n}\r\n\r\n/**是否为无效值 */\r\nexport function isInvalidVal(val: any) {\r\n    return (\r\n        ['', NaN, undefined, null, 'null', 'undefined', 'NaN'].indexOf(val) >= 0\r\n    )\r\n}\r\n\r\n/** sdkLog日志 */\r\nexport function sdkLog(...args) {\r\n    console.log(\r\n        `sdkLog: ${getFormatDate(null, 'YYYY-MM-DD hh:mm:ss')} ========> `,\r\n        ...args\r\n    )\r\n}\r\n\r\n/** sdkLog日志: warn */\r\nexport function sdkWarnLog(...args) {\r\n    console.warn(\r\n        `sdkLog: ${getFormatDate(null, 'YYYY-MM-DD hh:mm:ss')} ========> `,\r\n        ...args\r\n    )\r\n}\r\n\r\n/** sdkLog日志: err */\r\nexport function sdkErrorLog(...args) {\r\n    console.error(\r\n        `sdkLog: ${getFormatDate(null, 'YYYY-MM-DD hh:mm:ss')} ========> `,\r\n        ...args\r\n    )\r\n}\r\n","import { AnyObject } from '@/types'\r\nimport { deepCloneObj, isInvalidVal, sdkLog } from '@/utils/common'\r\n\r\ninterface GlobalDataType extends AnyObject {\r\n    /** 版本号 */\r\n    version: string\r\n    /** 初始化信息 */\r\n    initInfo: AnyObject\r\n    /** 系统设备信息 */\r\n    systemInfo: AnyObject\r\n    /** 用户信息 */\r\n    userInfo: AnyObject\r\n    /** 场景或加载信息 */\r\n    launchInfo: AnyObject\r\n}\r\n\r\nconst data: GlobalDataType = {\r\n    version: '1.0.0',\r\n    initInfo: {},\r\n    systemInfo: {},\r\n    userInfo: {},\r\n    launchInfo: {},\r\n}\r\n\r\nconst dataProxy = new Proxy(data, {\r\n    get: (target: GlobalDataType, key: string) => {\r\n        return target[key]\r\n    },\r\n    set: (target: GlobalDataType, key: string, val) => {\r\n        if (typeof target[key] !== 'object' || isInvalidVal(val)) {\r\n            target[key] = val\r\n        } else {\r\n            Object.assign(target[key], val)\r\n        }\r\n\r\n        sdkLog(`${key}: `, target[key])\r\n        return true\r\n    },\r\n})\r\n\r\nexport function getGlobalData(): GlobalDataType {\r\n    return dataProxy\r\n}\r\n","import { sdkWarnLog } from '@/utils/common'\r\n\r\nexport function wxCompareVersion(v1, v2) {\r\n    v1 = v1.split('.')\r\n    v2 = v2.split('.')\r\n    const len = Math.max(v1.length, v2.length)\r\n\r\n    while (v1.length < len) {\r\n        v1.push('0')\r\n    }\r\n    while (v2.length < len) {\r\n        v2.push('0')\r\n    }\r\n\r\n    for (let i = 0; i < len; i++) {\r\n        const num1 = parseInt(v1[i])\r\n        const num2 = parseInt(v2[i])\r\n\r\n        if (num1 > num2) {\r\n            return 1\r\n        } else if (num1 < num2) {\r\n            return -1\r\n        }\r\n    }\r\n\r\n    return 0\r\n}\r\n/**\r\n * 当前版本是否支持\r\n * @param version 目标版本\r\n * @returns\r\n */\r\nexport function isSupportVersion(version: string) {\r\n    if (!version) {\r\n        sdkWarnLog('请填写要校验的版本号')\r\n        return false\r\n    }\r\n\r\n    const currentVersion = wx.getAppBaseInfo\r\n        ? wx.getAppBaseInfo().SDKVersion\r\n        : wx.getAccountInfoSync().miniProgram.version\r\n    const flag = wxCompareVersion(currentVersion, version)\r\n    return flag >= 0\r\n}\r\n","export enum ResponseTypeEnum {\r\n    JSON = 'JSON',\r\n    TEXT = 'TEXT',\r\n    BLOB = 'BLOB',\r\n    ARRAYBUFFER = 'ARRAYBUFFER',\r\n}\r\n\r\nexport enum AdTypeEnum {\r\n    /** banner */\r\n    banner = 'banner',\r\n    /** 激励 */\r\n    rewardVideo = 'rewardVideo',\r\n    /** 插屏 */\r\n    interstitial = 'interstitial',\r\n}\r\n","import { AdMangerType, AnyObject } from '@/types'\r\nimport { AdTypeEnum } from '@/types/enum'\r\nimport { isSupportVersion } from './wxUtils'\r\nimport { sdkWarnLog } from '@/utils/common'\r\n/** 广告map */\r\nconst adMap: Map<AdTypeEnum, any[]> = new Map()\r\n/** 广告关闭回调map缓存 */\r\nconst adCloseCallback: Map<AdTypeEnum, Function[]> = new Map()\r\ntype adOptType =\r\n    | WechatMinigame.CreateBannerAdOption\r\n    | WechatMinigame.CreateRewardedVideoAdOption\r\n    | WechatMinigame.CreateInterstitialAdOption\r\n\r\nexport class WxAdManger implements AdMangerType {\r\n    adMap = adMap\r\n\r\n    constructor() {\r\n        // 初始化广告map\r\n        ;[\r\n            AdTypeEnum.banner,\r\n            AdTypeEnum.rewardVideo,\r\n            AdTypeEnum.interstitial,\r\n        ].forEach((type) => {\r\n            adMap.set(type, [])\r\n            adCloseCallback.set(type, [])\r\n        })\r\n    }\r\n\r\n    /**\r\n     * @param type AdTypeEnum\r\n     * @param data\r\n     */\r\n    createAd(type: AdTypeEnum, data: adOptType) {\r\n        const support = isSupportVersion('2.0.4')\r\n        if (!support) {\r\n            sdkWarnLog('广告创建版本要求最低2.0.4')\r\n            return\r\n        }\r\n        /** 添加广告关闭回调 */\r\n        const addOnCloseFn = () => {\r\n            if (type !== AdTypeEnum.banner) {\r\n                // 清空回调缓存\r\n                const cbArr = adCloseCallback.get(type).splice(0)\r\n                cbArr.forEach((cb) => this.onAdClose(type, cb))\r\n            }\r\n        }\r\n\r\n        let ad = this.getAdInstance(type, data.adUnitId)\r\n        // 如果有广告实例，则返回\r\n        if (ad) {\r\n            addOnCloseFn()\r\n            return ad\r\n        }\r\n\r\n        // 创建广告实例\r\n        if (type === AdTypeEnum.banner) {\r\n            ad = wx.createBannerAd(data as WechatMinigame.CreateBannerAdOption)\r\n        } else if (type === AdTypeEnum.rewardVideo) {\r\n            ad = wx.createRewardedVideoAd(data)\r\n        } else if (type === AdTypeEnum.interstitial) {\r\n            ad = wx.createInterstitialAd(data)\r\n        }\r\n        // 把广告id也加进去\r\n        ad.id = data.adUnitId\r\n        adMap.get(type).push(ad)\r\n        addOnCloseFn()\r\n        return ad\r\n    }\r\n\r\n    /**\r\n     * @param type AdTypeEnum\r\n     * @param adId 广告id\r\n     */\r\n    showAd(type: AdTypeEnum, data: adOptType) {\r\n        const ad = this.createAd(type, data)\r\n        ad && ad.show()\r\n        return ad\r\n    }\r\n\r\n    /**\r\n     * 隐藏广告，不传广告id，则全部隐藏\r\n     * @param type AdTypeEnum\r\n     * @param adId 广告id\r\n     */\r\n    hide(type: AdTypeEnum, adId?: string) {\r\n        // 只有banner才能隐藏\r\n        if (type !== AdTypeEnum.banner) {\r\n            return\r\n        }\r\n        if (adId) {\r\n            const ad = this.getAdInstance(type, adId)\r\n            ad && ad.hide()\r\n        } else {\r\n            adMap.get(type).forEach((ad) => {\r\n                ad.hide()\r\n            })\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 销毁广告，不传广告id，则全部销毁\r\n     * @param type AdTypeEnum\r\n     * @param adId 广告id\r\n     */\r\n    destroyAd(type: AdTypeEnum, adId?: string) {\r\n        if (adId) {\r\n            const ad = this.getAdInstance(type, adId)\r\n            if (ad) {\r\n                ad.destroy()\r\n                const index = adMap\r\n                    .get(type)\r\n                    .findIndex((item) => item.id === ad.id)\r\n                if (index >= 0) {\r\n                    adMap.get(type).splice(index, 1)\r\n                }\r\n            }\r\n        } else {\r\n            adMap.get(type).forEach((ad) => {\r\n                ad.destroy()\r\n            })\r\n            adMap.get(type).splice(0)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取广告实例，不传adId（广告id），则返回第一个实例缓存\r\n     * @param type\r\n     * @param adId\r\n     * @returns\r\n     */\r\n    getAdInstance(type: AdTypeEnum, adId?: string) {\r\n        if (adId) {\r\n            return adMap.get(type).find(({ id }) => id === adId)\r\n        }\r\n        return adMap.get(type)[0]\r\n    }\r\n\r\n    /**\r\n     * @param type AdTypeEnum\r\n     * @param cb 回调\r\n     */\r\n    onAdClose(type: AdTypeEnum, cb: Function) {\r\n        // banner没有监听\r\n        if (type === AdTypeEnum.banner) {\r\n            return\r\n        }\r\n        const adArr = adMap.get(type)\r\n        if (adArr.length) {\r\n            adArr.forEach((ad) => {\r\n                ad.onClose(cb)\r\n            })\r\n            return\r\n        }\r\n        // 如果没有创建广告，先缓存回调方法\r\n        adCloseCallback.get(type).push(cb)\r\n    }\r\n}\r\n","import { getGlobalData } from '@/constants/globalData'\r\nimport { AnyObject, SdkType } from '@/types'\r\nimport { isSupportVersion } from './wxUtils'\r\nimport { wxLaunchInfoType } from './wxTypes'\r\nimport { WxAdManger } from './wxAdManger'\r\nimport { AdTypeEnum } from '@/types/enum'\r\n\r\nclass WXGAMESDK implements SdkType {\r\n    adManger = new WxAdManger()\r\n    init(opt?: AnyObject) {\r\n        const data = getGlobalData()\r\n        if (opt) {\r\n            data.initInfo = opt\r\n        }\r\n        // 初始化启动信息\r\n        // data.launchInfo = wx.getLaunchOptionsSync()\r\n        wx.onShow((e) => {\r\n            data.launchInfo = e\r\n        })\r\n\r\n        // 初始化设备信息：做兼容\r\n        const support = isSupportVersion('2.25.3')\r\n        if (support) {\r\n            const windowInfo = wx.getWindowInfo()\r\n            const sysInfo = wx.getDeviceInfo()\r\n            const appInfo = wx.getAppBaseInfo()\r\n            const settingInfo = wx.getSystemSetting()\r\n            data.systemInfo = Object.assign(\r\n                {},\r\n                windowInfo,\r\n                sysInfo,\r\n                appInfo,\r\n                settingInfo,\r\n                wx.getAppAuthorizeSetting()\r\n            )\r\n        } else {\r\n            data.systemInfo = wx.getSystemInfoSync()\r\n        }\r\n    }\r\n    login(opt: AnyObject) {}\r\n\r\n    showBannerAd(opt: WechatMinigame.CreateBannerAdOption) {\r\n        return this.adManger.showAd(AdTypeEnum.banner, opt)\r\n    }\r\n\r\n    showRewardedVideoAd(opt: WechatMinigame.CreateRewardedVideoAdOption) {\r\n        return this.adManger.showAd(AdTypeEnum.rewardVideo, opt)\r\n    }\r\n\r\n    showInterstitialAd(opt: WechatMinigame.CreateInterstitialAdOption) {\r\n        return this.adManger.showAd(AdTypeEnum.interstitial, opt)\r\n    }\r\n\r\n    onShow(cb?: (res: wxLaunchInfoType) => void) {\r\n        cb &&\r\n            wx.onShow((e) => {\r\n                cb(e as wxLaunchInfoType)\r\n            })\r\n    }\r\n    onHide(cb: () => void) {\r\n        cb && wx.onHide(cb)\r\n    }\r\n\r\n    getSystemInfo() {\r\n        return getGlobalData().systemInfo\r\n    }\r\n}\r\nconst wxGameSdk = window['wxGameSdk'] || new WXGAMESDK()\r\nwindow['wxGameSdk'] = wxGameSdk\r\n\r\nexport default wxGameSdk as WXGAMESDK\r\n","import wxGameSdk from '@/sdk/wx/index'\r\n\r\nconsole.log('🚀 ~ wxGameSdk:', wxGameSdk)\r\nwxGameSdk.init({})\r\nconst btnList = [\r\n    {\r\n        label: '登录',\r\n        onClick: () => {\r\n            wxGameSdk.login({})\r\n        },\r\n    },\r\n    {\r\n        label: 'banner广告',\r\n        onClick: () => {\r\n            const ad = wxGameSdk.showBannerAd({\r\n                adUnitId: 'adunit-3a241b4da2d0fb46',\r\n                style: { left: 0, top: 0, width: 100, height: 100 },\r\n            })\r\n            console.log('🚀 ~ ad:', ad)\r\n        },\r\n    },\r\n    {\r\n        label: '激励广告',\r\n        onClick: () => {\r\n            const ad = wxGameSdk.showRewardedVideoAd({\r\n                adUnitId: 'adunit-3a241b4da2d0fb46',\r\n            })\r\n            console.log('🚀 ~ ad:', ad)\r\n        },\r\n    },\r\n    {\r\n        label: '插屏广告',\r\n        onClick: () => {\r\n            const ad = wxGameSdk.showInterstitialAd({\r\n                adUnitId: 'adunit-3a241b4da2d0fb46',\r\n            })\r\n            console.log('🚀 ~ ad:', ad)\r\n        },\r\n    },\r\n]\r\nfunction initBtnList() {\r\n    const width = 100\r\n    const height = 50\r\n    const padding = 20\r\n    const { windowHeight, windowWidth } = wxGameSdk.getSystemInfo()\r\n    const max = Math.floor(windowWidth / width)\r\n    const space = (windowWidth - padding - max * width) / max\r\n    let top = 100\r\n    let col = 0\r\n\r\n    btnList.forEach(({ label, onClick }, index) => {\r\n        const _index = index % max\r\n        let left = (width + space) * _index + padding\r\n        if (index && _index === 0) {\r\n            left = padding\r\n            col += 1\r\n            top += height + space\r\n        }\r\n\r\n        const button = wx.createUserInfoButton({\r\n            type: 'text', // 文本按钮\r\n            text: label, // 按钮文字\r\n            style: {\r\n                left,\r\n                top,\r\n                width, // 按钮宽度\r\n                height, // 按钮高度\r\n                backgroundColor: '#ff5722', // 按钮背景色\r\n                color: '#ffffff', // 按钮文字颜色\r\n                fontSize: 16, // 按钮文字大小\r\n                borderRadius: 8, // 按钮圆角\r\n                textAlign: 'center', // 按钮文字对齐方式\r\n                lineHeight: 50, // 按钮文字行高\r\n            },\r\n        })\r\n        button.onTap(onClick)\r\n    })\r\n}\r\ninitBtnList()\r\n"],"names":["getFormatDate","timestamp","format","date","years","month","day","formatNum","num","dateStr","hour","min","second","isInvalidVal","val","sdkLog","args","sdkWarnLog","data","dataProxy","target","key","getGlobalData","wxCompareVersion","v1","v2","len","i","num1","num2","isSupportVersion","version","currentVersion","AdTypeEnum","adMap","adCloseCallback","WxAdManger","__publicField","type","addOnCloseFn","cb","ad","adId","index","item","id","adArr","WXGAMESDK","opt","e","windowInfo","sysInfo","appInfo","settingInfo","wxGameSdk","btnList","initBtnList","windowHeight","windowWidth","max","space","top","label","onClick","_index","left"],"mappings":";;;AAYgB,SAAAA,EACZC,GACAC,GACF;AACE,QAAMC,wBAA6C,KAAK,GAClDC,IAAQD,EAAK,YAAY,GACzBE,IAAQF,EAAK,SAAA,IAAa,GAC1BG,IAAMH,EAAK,QAAQ,GACnBI,IAAY,CAACC,MACR,OAAOA,CAAG,EAAE,SAAS,GAAG,GAAG;AAElC,MAAAC,IAAU,GAAGL,CAAK,IAAIG,EAAUF,CAAK,CAAC,IAAIE,EAAUD,CAAG,CAAC;AAEtB;AAC5B,UAAAI,IAAOP,EAAK,SAAS,GACrBQ,IAAMR,EAAK,WAAW,GACtBS,IAAST,EAAK,WAAW;AACpB,IAAAM,KAAA,IAAIF,EAAUG,CAAI,CAAC,IAAIH,EAAUI,CAAG,CAAC,IAAIJ,EAAUK,CAAM,CAAC;AAAA,EAAA;AAGlE,SAAAH;AACX;ACkCO,SAASI,EAAaC,GAAU;AAE/B,SAAA,CAAC,IAAI,KAAK,QAAW,MAAM,QAAQ,aAAa,KAAK,EAAE,QAAQA,CAAG,KAAK;AAE/E;AAGO,SAASC,KAAUC,GAAM;AACpB,UAAA;AAAA,IACJ,WAAWhB,EAAyC,CAAC;AAAA,IACrD,GAAGgB;AAAA,EACP;AACJ;AAGO,SAASC,KAAcD,GAAM;AACxB,UAAA;AAAA,IACJ,WAAWhB,EAAyC,CAAC;AAAA,IACrD,GAAGgB;AAAA,EACP;AACJ;ACvEA,MAAME,IAAuB;AAAA,EACzB,SAAS;AAAA,EACT,UAAU,CAAC;AAAA,EACX,YAAY,CAAC;AAAA,EACb,UAAU,CAAC;AAAA,EACX,YAAY,CAAA;AAChB,GAEMC,IAAY,IAAI,MAAMD,GAAM;AAAA,EAC9B,KAAK,CAACE,GAAwBC,MACnBD,EAAOC,CAAG;AAAA,EAErB,KAAK,CAACD,GAAwBC,GAAaP,OACnC,OAAOM,EAAOC,CAAG,KAAM,YAAYR,EAAaC,CAAG,IACnDM,EAAOC,CAAG,IAAIP,IAEd,OAAO,OAAOM,EAAOC,CAAG,GAAGP,CAAG,GAGlCC,EAAO,GAAGM,CAAG,MAAMD,EAAOC,CAAG,CAAC,GACvB;AAEf,CAAC;AAEM,SAASC,IAAgC;AACrC,SAAAH;AACX;ACxCgB,SAAAI,EAAiBC,GAAIC,GAAI;AAChC,EAAAD,IAAAA,EAAG,MAAM,GAAG,GACZC,IAAAA,EAAG,MAAM,GAAG;AACjB,QAAMC,IAAM,KAAK,IAAIF,EAAG,QAAQC,EAAG,MAAM;AAElC,SAAAD,EAAG,SAASE;AACf,IAAAF,EAAG,KAAK,GAAG;AAER,SAAAC,EAAG,SAASC;AACf,IAAAD,EAAG,KAAK,GAAG;AAGf,WAASE,IAAI,GAAGA,IAAID,GAAKC,KAAK;AAC1B,UAAMC,IAAO,SAASJ,EAAGG,CAAC,CAAC,GACrBE,IAAO,SAASJ,EAAGE,CAAC,CAAC;AAE3B,QAAIC,IAAOC;AACA,aAAA;AACX,QAAWD,IAAOC;AACP,aAAA;AAAA,EACX;AAGG,SAAA;AACX;AAMO,SAASC,EAAiBC,GAAiB;AAC9C,MAAI,CAACA;AACD,WAAAd,EAAW,YAAY,GAChB;AAGL,QAAAe,IAAiB,GAAG,iBACpB,GAAG,iBAAiB,aACpB,GAAG,mBAAmB,EAAE,YAAY;AAE1C,SADaT,EAAiBS,GAAgBD,CAAO,KACtC;AACnB;ACpCY,IAAAE,sBAAAA,OAERA,EAAA,SAAS,UAETA,EAAA,cAAc,eAEdA,EAAA,eAAe,gBANPA,IAAAA,KAAA,CAAA,CAAA;ACFZ,MAAMC,wBAAoC,IAAI,GAExCC,wBAAmD,IAAI;AAMtD,MAAMC,EAAmC;AAAA,EAG5C,cAAc;AAFd,IAAAC,EAAA,eAAQH;AAIH;AAAA,MACGD,EAAW;AAAA,MACXA,EAAW;AAAA,MACXA,EAAW;AAAA,IAAA,EACb,QAAQ,CAACK,MAAS;AACV,MAAAJ,EAAA,IAAII,GAAM,EAAE,GACFH,EAAA,IAAIG,GAAM,EAAE;AAAA,IAAA,CAC/B;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOL,SAASA,GAAkBpB,GAAiB;AAExC,QAAI,CADYY,EAAiB,OAAO,GAC1B;AACV,MAAAb,EAAW,iBAAiB;AAC5B;AAAA,IAAA;AAGJ,UAAMsB,IAAe,MAAM;AACnB,MAAAD,MAASL,EAAW,UAENE,EAAgB,IAAIG,CAAI,EAAE,OAAO,CAAC,EAC1C,QAAQ,CAACE,MAAO,KAAK,UAAUF,GAAME,CAAE,CAAC;AAAA,IAEtD;AAEA,QAAIC,IAAK,KAAK,cAAcH,GAAMpB,EAAK,QAAQ;AAE/C,WAAIuB,KACaF,EAAA,GACNE,MAIPH,MAASL,EAAW,SACfQ,IAAA,GAAG,eAAevB,CAA2C,IAC3DoB,MAASL,EAAW,cACtBQ,IAAA,GAAG,sBAAsBvB,CAAI,IAC3BoB,MAASL,EAAW,iBACtBQ,IAAA,GAAG,qBAAqBvB,CAAI,IAGrCuB,EAAG,KAAKvB,EAAK,UACbgB,EAAM,IAAII,CAAI,EAAE,KAAKG,CAAE,GACVF,EAAA,GACNE;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOX,OAAOH,GAAkBpB,GAAiB;AACtC,UAAMuB,IAAK,KAAK,SAASH,GAAMpB,CAAI;AACnC,WAAAuB,KAAMA,EAAG,KAAK,GACPA;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQX,KAAKH,GAAkBI,GAAe;AAE9B,QAAAJ,MAASL,EAAW;AAGxB,UAAIS,GAAM;AACN,cAAMD,IAAK,KAAK,cAAcH,GAAMI,CAAI;AACxC,QAAAD,KAAMA,EAAG,KAAK;AAAA,MAAA;AAEd,QAAAP,EAAM,IAAII,CAAI,EAAE,QAAQ,CAACG,MAAO;AAC5B,UAAAA,EAAG,KAAK;AAAA,QAAA,CACX;AAAA,EACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQJ,UAAUH,GAAkBI,GAAe;AACvC,QAAIA,GAAM;AACN,YAAMD,IAAK,KAAK,cAAcH,GAAMI,CAAI;AACxC,UAAID,GAAI;AACJ,QAAAA,EAAG,QAAQ;AACL,cAAAE,IAAQT,EACT,IAAII,CAAI,EACR,UAAU,CAACM,MAASA,EAAK,OAAOH,EAAG,EAAE;AAC1C,QAAIE,KAAS,KACTT,EAAM,IAAII,CAAI,EAAE,OAAOK,GAAO,CAAC;AAAA,MACnC;AAAA,IACJ;AAEA,MAAAT,EAAM,IAAII,CAAI,EAAE,QAAQ,CAACG,MAAO;AAC5B,QAAAA,EAAG,QAAQ;AAAA,MAAA,CACd,GACDP,EAAM,IAAII,CAAI,EAAE,OAAO,CAAC;AAAA,EAC5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASJ,cAAcA,GAAkBI,GAAe;AAC3C,WAAIA,IACOR,EAAM,IAAII,CAAI,EAAE,KAAK,CAAC,EAAE,IAAAO,EAAA,MAASA,MAAOH,CAAI,IAEhDR,EAAM,IAAII,CAAI,EAAE,CAAC;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAO5B,UAAUA,GAAkBE,GAAc;AAElC,QAAAF,MAASL,EAAW;AACpB;AAEE,UAAAa,IAAQZ,EAAM,IAAII,CAAI;AAC5B,QAAIQ,EAAM,QAAQ;AACR,MAAAA,EAAA,QAAQ,CAACL,MAAO;AAClB,QAAAA,EAAG,QAAQD,CAAE;AAAA,MAAA,CAChB;AACD;AAAA,IAAA;AAGJ,IAAAL,EAAgB,IAAIG,CAAI,EAAE,KAAKE,CAAE;AAAA,EAAA;AAEzC;ACrJA,MAAMO,EAA6B;AAAA,EAAnC;AACI,IAAAV,EAAA,kBAAW,IAAID,EAAW;AAAA;AAAA,EAC1B,KAAKY,GAAiB;AAClB,UAAM9B,IAAOI,EAAc;AAY3B,QAXI0B,MACA9B,EAAK,WAAW8B,IAIjB,GAAA,OAAO,CAACC,MAAM;AACb,MAAA/B,EAAK,aAAa+B;AAAA,IAAA,CACrB,GAGenB,EAAiB,QAAQ,GAC5B;AACH,YAAAoB,IAAa,GAAG,cAAc,GAC9BC,IAAU,GAAG,cAAc,GAC3BC,IAAU,GAAG,eAAe,GAC5BC,IAAc,GAAG,iBAAiB;AACxC,MAAAnC,EAAK,aAAa,OAAO;AAAA,QACrB,CAAC;AAAA,QACDgC;AAAA,QACAC;AAAA,QACAC;AAAA,QACAC;AAAA,QACA,GAAG,uBAAuB;AAAA,MAC9B;AAAA,IAAA;AAEK,MAAAnC,EAAA,aAAa,GAAG,kBAAkB;AAAA,EAC3C;AAAA,EAEJ,MAAM8B,GAAgB;AAAA,EAAA;AAAA,EAEtB,aAAaA,GAA0C;AACnD,WAAO,KAAK,SAAS,OAAOf,EAAW,QAAQe,CAAG;AAAA,EAAA;AAAA,EAGtD,oBAAoBA,GAAiD;AACjE,WAAO,KAAK,SAAS,OAAOf,EAAW,aAAae,CAAG;AAAA,EAAA;AAAA,EAG3D,mBAAmBA,GAAgD;AAC/D,WAAO,KAAK,SAAS,OAAOf,EAAW,cAAce,CAAG;AAAA,EAAA;AAAA,EAG5D,OAAOR,GAAsC;AAErC,IAAAA,KAAA,GAAG,OAAO,CAACS,MAAM;AACb,MAAAT,EAAGS,CAAqB;AAAA,IAAA,CAC3B;AAAA,EAAA;AAAA,EAET,OAAOT,GAAgB;AACb,IAAAA,KAAA,GAAG,OAAOA,CAAE;AAAA,EAAA;AAAA,EAGtB,gBAAgB;AACZ,WAAOlB,EAAgB,EAAA;AAAA,EAAA;AAE/B;AACA,MAAMgC,IAAY,OAAO,aAAgB,IAAIP,EAAU;AACvD,OAAO,YAAeO;AClEtB,QAAQ,IAAI,mBAAmBA,CAAS;AACxCA,EAAU,KAAK,CAAA,CAAE;AACjB,MAAMC,IAAU;AAAA,EACZ;AAAA,IACI,OAAO;AAAA,IACP,SAAS,MAAM;AACD,MAAAD,EAAA,MAAM,EAAE;AAAA,IAAA;AAAA,EAE1B;AAAA,EACA;AAAA,IACI,OAAO;AAAA,IACP,SAAS,MAAM;AACL,YAAAb,IAAKa,EAAU,aAAa;AAAA,QAC9B,UAAU;AAAA,QACV,OAAO,EAAE,MAAM,GAAG,KAAK,GAAG,OAAO,KAAK,QAAQ,IAAI;AAAA,MAAA,CACrD;AACO,cAAA,IAAI,YAAYb,CAAE;AAAA,IAAA;AAAA,EAElC;AAAA,EACA;AAAA,IACI,OAAO;AAAA,IACP,SAAS,MAAM;AACL,YAAAA,IAAKa,EAAU,oBAAoB;AAAA,QACrC,UAAU;AAAA,MAAA,CACb;AACO,cAAA,IAAI,YAAYb,CAAE;AAAA,IAAA;AAAA,EAElC;AAAA,EACA;AAAA,IACI,OAAO;AAAA,IACP,SAAS,MAAM;AACL,YAAAA,IAAKa,EAAU,mBAAmB;AAAA,QACpC,UAAU;AAAA,MAAA,CACb;AACO,cAAA,IAAI,YAAYb,CAAE;AAAA,IAAA;AAAA,EAC9B;AAER;AACA,SAASe,IAAc;AAInB,QAAM,EAAE,cAAAC,GAAc,aAAAC,MAAgBJ,EAAU,cAAc,GACxDK,IAAM,KAAK,MAAMD,IAAc,GAAK,GACpCE,KAASF,IAAc,KAAUC,IAAM,OAASA;AACtD,MAAIE,IAAM;AAGV,EAAAN,EAAQ,QAAQ,CAAC,EAAE,OAAAO,GAAO,SAAAC,EAAA,GAAWpB,MAAU;AAC3C,UAAMqB,IAASrB,IAAQgB;AACnB,QAAAM,KAAQ,MAAQL,KAASI,IAAS;AAClC,IAAArB,KAASqB,MAAW,MACbC,IAAA,IAEPJ,KAAO,KAASD,IAGL,GAAG,qBAAqB;AAAA,MACnC,MAAM;AAAA;AAAA,MACN,MAAME;AAAA;AAAA,MACN,OAAO;AAAA,QACH,MAAAG;AAAA,QACA,KAAAJ;AAAA,QACA;AAAA;AAAA,QACA;AAAA;AAAA,QACA,iBAAiB;AAAA;AAAA,QACjB,OAAO;AAAA;AAAA,QACP,UAAU;AAAA;AAAA,QACV,cAAc;AAAA;AAAA,QACd,WAAW;AAAA;AAAA,QACX,YAAY;AAAA;AAAA,MAAA;AAAA,IAChB,CACH,EACM,MAAME,CAAO;AAAA,EAAA,CACvB;AACL;AACAP,EAAY;"}